# .github/workflows/dotnet-ci.yml
name: .NET CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Define a service container for Redis
    # This will start a Redis container that your tests can connect to
    services:
      redis:
        image: redis:alpine # Using alpine for a smaller image
        ports:
          # The port mapping here is for the runner's internal network,
          # your app will connect to 'redis:6379'
          - 6379:6379
        # Optional: Add a health check for Redis to ensure it's ready
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore Product.API.sln

      - name: Build
        run: dotnet build Product.API.sln --configuration Release --no-restore

      - name: Test
        run: dotnet test Product.API.sln --configuration Release --no-build --verbosity normal
        # Set an environment variable for the test run to tell the app
        # where to find Redis. This overrides the appsettings.json value.
        env:
          ConnectionStrings__Redis: "redis:6379" # <-- CRITICAL CHANGE
          # ASPNETCORE_ENVIRONMENT: "Development" # Or a specific test environment if you have one
